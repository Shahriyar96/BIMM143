---
title: "lab14"
format: html
editor: visual
---

## 

here we run through a complete RNASeq analysis counts to pathways and biological insight...

##data import

```{r}
library(DESeq2)

```

```{r}
metaFile <- ("GSE37704_metadata.csv")
countFile <- ("GSE37704_featurecounts.csv")

# Import metadata and take a peak
colData = read.csv(metaFile, row.names=1)
head(colData)
```
```{r}
# Import countdata
countData = read.csv(countFile, row.names=1)
head(countData)
```

```{r}
# Note we need to remove the odd first $length col
countData <- as.matrix(countData[,-1])
```

```{r}
head(countData)
```

```{r}
# Filter count data where you have 0 read count across all samples.
countData = countData[rowSums(countData) > 0, ]
head(countData)

```



##setup for DESeq

##running DESeq

```{r}
library(DESeq2)

```

```{r}
dds = DESeqDataSetFromMatrix(countData=countData,
                             colData=colData,
                             design=~condition)
dds = DESeq(dds)
```
```{r}
dds
```
```{r}
res = results(dds, contrast=c("condition", "hoxa1_kd", "control_sirna"))

```

```{r}
summary(res)

```

##results visualization

```{r}
plot( res$log2FoldChange, -log(res$padj) )
```


```{r}
# Make a color vector for all genes
mycols <- rep("gray", nrow(res))

# Color red the genes with absolute fold change above 2
mycols[ abs(res$log2FoldChange) > 2 ] <- "red"

# Color blue those with adjusted p-value less than 0.01 and absolute fold change more than 2
inds <- (res$padj < 0.01) & (abs(res$log2FoldChange) > 2)
mycols[ inds ] <- "blue"

# Plot with colors and axis labels
plot(res$log2FoldChange, -log10(res$padj), col=mycols, xlab="Log2(FoldChange)", ylab="-Log10(P-value)")

```



##add gene annotation data(gene names etc.)


```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")

# Check available columns in the org.Hs.eg.db database
columns(org.Hs.eg.db)

# Add SYMBOL annotation
res$symbol = mapIds(org.Hs.eg.db,
                    keys=row.names(res), 
                    keytype="ENSEMBL",
                    column="SYMBOL",
                    multiVals="first")

# Add ENTREZID annotation
res$entrez = mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="ENTREZID",
                    multiVals="first")

# Add GENENAME annotation
res$name = mapIds(org.Hs.eg.db,
                  keys=row.names(res),
                  keytype="ENSEMBL",
                  column="GENENAME",
                  multiVals="first")

# Display the first 10 rows of the results with annotations
head(res, 10)

```

##save our results


```{r}
# Reorder the results by adjusted p-value
res = res[order(res$padj),]

# Save the reordered results to a CSV file
write.csv(res, file="deseq_results.csv")

```

```{r}
library(pathview)

```
```{r}
library(gage)
library(gageData)

data(kegg.sets.hs)
data(sigmet.idx.hs)

# Focus on signaling and metabolic pathways only
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

# Examine the first 3 pathways
head(kegg.sets.hs, 3)
```

```{r}
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
```


```{r}
# Get the results
keggres = gage(foldchanges, gsets=kegg.sets.hs)
```
```{r}
attributes(keggres)

```

```{r}
# Look at the first few down (less) pathways
head(keggres$less)
```
```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110")

```
![](hsa04110.png)

```{r}
# A different PDF based output of the same data
pathview(gene.data=foldchanges, pathway.id="hsa04110", kegg.native=FALSE)
```
![](hsa04110.pathview.png)


```{r}
## Focus on top 5 upregulated pathways here for demo purposes only
keggrespathways <- rownames(keggres$less)[1:5]

# Extract the 8 character long IDs part of each string
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```


```{r}
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")

```



Section 3. Gene Ontology (GO)

```{r}
data(go.sets.hs)
data(go.subs.hs)

# Focus on Biological Process subset of GO
gobpsets = go.sets.hs[go.subs.hs$BP]

gobpres = gage(foldchanges, gsets=gobpsets, same.dir=TRUE)

lapply(gobpres, head)
```


Section 4. Reactome Analysis


```{r}
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]
print(paste("Total number of significant genes:", length(sig_genes)))
```

```{r}
write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)

```

###Reactome

![](R-HSA-1640170.svg)


